Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANYTHING
    CLOSE_COMMENT
    OPEN_COMMENT
    REPEAT
    UNTIL

Grammar

Rule 0     S' -> start
Rule 1     start -> PROGBEGIN state_list DOT
Rule 2     start -> PROGBEGIN NAME state_list DOT
Rule 3     state_list -> BLOCK_OPEN state END_LINE state_list BLOCK_CLOSE
Rule 4     state_list -> BLOCK_OPEN state END_LINE BLOCK_CLOSE
Rule 5     state_list -> state END_LINE state_list
Rule 6     state_list -> state END_LINE
Rule 7     state_body -> BLOCK_OPEN state_list BLOCK_CLOSE
Rule 8     state_body -> state
Rule 9     state -> IF expression THEN state_body
Rule 10    state -> IF expression THEN state_body ELSE state_body
Rule 11    state -> FOR NAME ASSIGNMENT expression TO expression DO state_body
Rule 12    state -> WHILE expression DO state_body
Rule 13    state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
Rule 14    state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
Rule 15    state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
Rule 16    argument_list -> NAME COLON var_type COMMA argument_list
Rule 17    argument_list -> NAME COLON var_type
Rule 18    argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type COMMA argument_list
Rule 19    argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
Rule 20    argument_list -> empty
Rule 21    state -> RETURN expression
Rule 22    state -> RETURN
Rule 23    state -> VAR_DEF NAME COLON var_type
Rule 24    state_var_def -> VAR_DEF NAME COLON var_type
Rule 25    state -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
Rule 26    state_array_def -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
Rule 27    state -> WRITELN OPEN_ROUND_BKT expression CLOSE_ROUND_BKT
Rule 28    state -> READLN OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT
Rule 29    state -> expression_name ASSIGNMENT expression
Rule 30    state -> expression_array_call ASSIGNMENT expression
Rule 31    state -> state_var_def ASSIGNMENT expression
Rule 32    state -> state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
Rule 33    state -> expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
Rule 34    state -> expression
Rule 35    expr_list -> expression COMMA expr_list
Rule 36    expr_list -> expression
Rule 37    expr_list -> empty
Rule 38    expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
Rule 39    expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
Rule 40    expression_array_call -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
Rule 41    expression -> expression MULTIPLY expression
Rule 42    expression -> expression DIVIDE expression
Rule 43    expression -> expression PLUS expression
Rule 44    expression -> expression MINUS expression
Rule 45    expression -> expression EQUALS expression
Rule 46    expression -> expression MORE expression
Rule 47    expression -> expression LESS expression
Rule 48    expression -> expression AND expression
Rule 49    expression -> expression OR expression
Rule 50    expression -> INT
Rule 51    expression -> FLOAT
Rule 52    expression -> BOOL
Rule 53    expression -> expression_name DOT LENGTH
Rule 54    expression -> STRING
Rule 55    expression -> NAME
Rule 56    expression_name -> NAME
Rule 57    var_type -> FLOAT_TYPE
Rule 58    var_type -> INT_TYPE
Rule 59    var_type -> STRING_TYPE
Rule 60    var_type -> BOOL_TYPE
Rule 61    empty -> <empty>

Terminals, with rules where they appear

AND                  : 48
ANYTHING             : 
ARRAY                : 15 18 19 25 26
ASSIGNMENT           : 11 29 30 31 32 33
BLOCK_CLOSE          : 3 4 7 13 14 15
BLOCK_OPEN           : 3 4 7 13 14 15
BOOL                 : 52
BOOL_TYPE            : 60
CLOSE_COMMENT        : 
CLOSE_ROUND_BKT      : 13 14 15 27 28 32 33 38
CLOSE_SQUARE_BKT     : 15 18 19 25 26 39 40
COLON                : 13 14 15 16 17 18 19 23 24 25 26
COMMA                : 16 18 35
DIVIDE               : 42
DO                   : 11 12
DOT                  : 1 2 15 15 18 18 19 19 25 25 26 26 53
ELSE                 : 10
END_LINE             : 3 4 5 6 13 14 15
EQUALS               : 45
FLOAT                : 51
FLOAT_TYPE           : 57
FOR                  : 11
FUNC_DEF             : 13 14 15
IF                   : 9 10
INT                  : 15 15 18 18 19 19 25 25 26 26 50
INT_TYPE             : 58
LENGTH               : 53
LESS                 : 47
MINUS                : 44
MORE                 : 46
MULTIPLY             : 41
NAME                 : 2 11 13 14 15 16 17 18 19 23 24 25 26 28 38 39 40 55 56
NONE_TYPE            : 14
OF                   : 15 18 19 25 26
OPEN_COMMENT         : 
OPEN_ROUND_BKT       : 13 14 15 27 28 32 33 38
OPEN_SQUARE_BKT      : 15 18 19 25 26 39 40
OR                   : 49
PLUS                 : 43
PROGBEGIN            : 1 2
READLN               : 28
REPEAT               : 
RETURN               : 21 22
STRING               : 54
STRING_TYPE          : 59
THEN                 : 9 10
TO                   : 11
UNTIL                : 
VAR_DEF              : 23 24 25 26
WHILE                : 12
WRITELN              : 27
error                : 

Nonterminals, with rules where they appear

argument_list        : 13 14 15 16 18
empty                : 20 37
expr_list            : 32 33 35 38
expression           : 9 10 11 11 12 21 27 29 30 31 34 35 36 39 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49
expression_array_call : 30
expression_name      : 29 33 53
start                : 0
state                : 3 4 5 6 8
state_array_def      : 32
state_body           : 9 10 10 11 12
state_list           : 1 2 3 5 7 13 14 15
state_var_def        : 31
var_type             : 13 15 16 17 18 19 23 24 25 26

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . PROGBEGIN state_list DOT
    (2) start -> . PROGBEGIN NAME state_list DOT

    PROGBEGIN       shift and go to state 2

    start                          shift and go to state 1

state 1

    (0) S' -> start .



state 2

    (1) start -> PROGBEGIN . state_list DOT
    (2) start -> PROGBEGIN . NAME state_list DOT
    (3) state_list -> . BLOCK_OPEN state END_LINE state_list BLOCK_CLOSE
    (4) state_list -> . BLOCK_OPEN state END_LINE BLOCK_CLOSE
    (5) state_list -> . state END_LINE state_list
    (6) state_list -> . state END_LINE
    (9) state -> . IF expression THEN state_body
    (10) state -> . IF expression THEN state_body ELSE state_body
    (11) state -> . FOR NAME ASSIGNMENT expression TO expression DO state_body
    (12) state -> . WHILE expression DO state_body
    (13) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (21) state -> . RETURN expression
    (22) state -> . RETURN
    (23) state -> . VAR_DEF NAME COLON var_type
    (25) state -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (27) state -> . WRITELN OPEN_ROUND_BKT expression CLOSE_ROUND_BKT
    (28) state -> . READLN OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT
    (29) state -> . expression_name ASSIGNMENT expression
    (30) state -> . expression_array_call ASSIGNMENT expression
    (31) state -> . state_var_def ASSIGNMENT expression
    (32) state -> . state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (33) state -> . expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (34) state -> . expression
    (56) expression_name -> . NAME
    (40) expression_array_call -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (24) state_var_def -> . VAR_DEF NAME COLON var_type
    (26) state_array_def -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME

    NAME            shift and go to state 4
    BLOCK_OPEN      shift and go to state 5
    IF              shift and go to state 7
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    FUNC_DEF        shift and go to state 11
    RETURN          shift and go to state 13
    VAR_DEF         shift and go to state 14
    WRITELN         shift and go to state 15
    READLN          shift and go to state 16
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    state_list                     shift and go to state 3
    state                          shift and go to state 6
    expression                     shift and go to state 8
    expression_name                shift and go to state 17
    expression_array_call          shift and go to state 18
    state_var_def                  shift and go to state 19
    state_array_def                shift and go to state 20

state 3

    (1) start -> PROGBEGIN state_list . DOT

    DOT             shift and go to state 24


state 4

    (2) start -> PROGBEGIN NAME . state_list DOT
    (56) expression_name -> NAME .
    (40) expression_array_call -> NAME . OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (38) expression -> NAME . OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> NAME . OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (55) expression -> NAME .
    (3) state_list -> . BLOCK_OPEN state END_LINE state_list BLOCK_CLOSE
    (4) state_list -> . BLOCK_OPEN state END_LINE BLOCK_CLOSE
    (5) state_list -> . state END_LINE state_list
    (6) state_list -> . state END_LINE
    (9) state -> . IF expression THEN state_body
    (10) state -> . IF expression THEN state_body ELSE state_body
    (11) state -> . FOR NAME ASSIGNMENT expression TO expression DO state_body
    (12) state -> . WHILE expression DO state_body
    (13) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (21) state -> . RETURN expression
    (22) state -> . RETURN
    (23) state -> . VAR_DEF NAME COLON var_type
    (25) state -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (27) state -> . WRITELN OPEN_ROUND_BKT expression CLOSE_ROUND_BKT
    (28) state -> . READLN OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT
    (29) state -> . expression_name ASSIGNMENT expression
    (30) state -> . expression_array_call ASSIGNMENT expression
    (31) state -> . state_var_def ASSIGNMENT expression
    (32) state -> . state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (33) state -> . expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (34) state -> . expression
    (56) expression_name -> . NAME
    (40) expression_array_call -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (24) state_var_def -> . VAR_DEF NAME COLON var_type
    (26) state_array_def -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME

    ASSIGNMENT      reduce using rule 56 (expression_name -> NAME .)
    DOT             reduce using rule 56 (expression_name -> NAME .)
    OPEN_SQUARE_BKT shift and go to state 27
    OPEN_ROUND_BKT  shift and go to state 28
    MULTIPLY        reduce using rule 55 (expression -> NAME .)
    DIVIDE          reduce using rule 55 (expression -> NAME .)
    PLUS            reduce using rule 55 (expression -> NAME .)
    MINUS           reduce using rule 55 (expression -> NAME .)
    EQUALS          reduce using rule 55 (expression -> NAME .)
    MORE            reduce using rule 55 (expression -> NAME .)
    LESS            reduce using rule 55 (expression -> NAME .)
    AND             reduce using rule 55 (expression -> NAME .)
    OR              reduce using rule 55 (expression -> NAME .)
    END_LINE        reduce using rule 55 (expression -> NAME .)
    BLOCK_OPEN      shift and go to state 5
    IF              shift and go to state 7
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    FUNC_DEF        shift and go to state 11
    RETURN          shift and go to state 13
    VAR_DEF         shift and go to state 14
    WRITELN         shift and go to state 15
    READLN          shift and go to state 16
    NAME            shift and go to state 25
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    state_list                     shift and go to state 26
    expression                     shift and go to state 8
    state                          shift and go to state 6
    expression_name                shift and go to state 17
    expression_array_call          shift and go to state 18
    state_var_def                  shift and go to state 19
    state_array_def                shift and go to state 20

state 5

    (3) state_list -> BLOCK_OPEN . state END_LINE state_list BLOCK_CLOSE
    (4) state_list -> BLOCK_OPEN . state END_LINE BLOCK_CLOSE
    (9) state -> . IF expression THEN state_body
    (10) state -> . IF expression THEN state_body ELSE state_body
    (11) state -> . FOR NAME ASSIGNMENT expression TO expression DO state_body
    (12) state -> . WHILE expression DO state_body
    (13) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (21) state -> . RETURN expression
    (22) state -> . RETURN
    (23) state -> . VAR_DEF NAME COLON var_type
    (25) state -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (27) state -> . WRITELN OPEN_ROUND_BKT expression CLOSE_ROUND_BKT
    (28) state -> . READLN OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT
    (29) state -> . expression_name ASSIGNMENT expression
    (30) state -> . expression_array_call ASSIGNMENT expression
    (31) state -> . state_var_def ASSIGNMENT expression
    (32) state -> . state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (33) state -> . expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (34) state -> . expression
    (56) expression_name -> . NAME
    (40) expression_array_call -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (24) state_var_def -> . VAR_DEF NAME COLON var_type
    (26) state_array_def -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME

    IF              shift and go to state 7
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    FUNC_DEF        shift and go to state 11
    RETURN          shift and go to state 13
    VAR_DEF         shift and go to state 14
    WRITELN         shift and go to state 15
    READLN          shift and go to state 16
    NAME            shift and go to state 25
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    state                          shift and go to state 29
    expression                     shift and go to state 8
    expression_name                shift and go to state 17
    expression_array_call          shift and go to state 18
    state_var_def                  shift and go to state 19
    state_array_def                shift and go to state 20

state 6

    (5) state_list -> state . END_LINE state_list
    (6) state_list -> state . END_LINE

    END_LINE        shift and go to state 30


state 7

    (9) state -> IF . expression THEN state_body
    (10) state -> IF . expression THEN state_body ELSE state_body
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 31
    expression_name                shift and go to state 33

state 8

    (34) state -> expression .
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    END_LINE        reduce using rule 34 (state -> expression .)
    ELSE            reduce using rule 34 (state -> expression .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    EQUALS          shift and go to state 38
    MORE            shift and go to state 39
    LESS            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 9

    (11) state -> FOR . NAME ASSIGNMENT expression TO expression DO state_body

    NAME            shift and go to state 43


state 10

    (12) state -> WHILE . expression DO state_body
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 44
    expression_name                shift and go to state 33

state 11

    (13) state -> FUNC_DEF . NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> FUNC_DEF . NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> FUNC_DEF . NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE

    NAME            shift and go to state 45


state 12

    (50) expression -> INT .

    MULTIPLY        reduce using rule 50 (expression -> INT .)
    DIVIDE          reduce using rule 50 (expression -> INT .)
    PLUS            reduce using rule 50 (expression -> INT .)
    MINUS           reduce using rule 50 (expression -> INT .)
    EQUALS          reduce using rule 50 (expression -> INT .)
    MORE            reduce using rule 50 (expression -> INT .)
    LESS            reduce using rule 50 (expression -> INT .)
    AND             reduce using rule 50 (expression -> INT .)
    OR              reduce using rule 50 (expression -> INT .)
    END_LINE        reduce using rule 50 (expression -> INT .)
    THEN            reduce using rule 50 (expression -> INT .)
    DO              reduce using rule 50 (expression -> INT .)
    ELSE            reduce using rule 50 (expression -> INT .)
    CLOSE_SQUARE_BKT reduce using rule 50 (expression -> INT .)
    COMMA           reduce using rule 50 (expression -> INT .)
    CLOSE_ROUND_BKT reduce using rule 50 (expression -> INT .)
    TO              reduce using rule 50 (expression -> INT .)


state 13

    (21) state -> RETURN . expression
    (22) state -> RETURN .
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    END_LINE        reduce using rule 22 (state -> RETURN .)
    ELSE            reduce using rule 22 (state -> RETURN .)
    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 46
    expression_name                shift and go to state 33

state 14

    (23) state -> VAR_DEF . NAME COLON var_type
    (25) state -> VAR_DEF . NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (24) state_var_def -> VAR_DEF . NAME COLON var_type
    (26) state_array_def -> VAR_DEF . NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type

    NAME            shift and go to state 47


state 15

    (27) state -> WRITELN . OPEN_ROUND_BKT expression CLOSE_ROUND_BKT

    OPEN_ROUND_BKT  shift and go to state 48


state 16

    (28) state -> READLN . OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT

    OPEN_ROUND_BKT  shift and go to state 49


state 17

    (29) state -> expression_name . ASSIGNMENT expression
    (33) state -> expression_name . ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (53) expression -> expression_name . DOT LENGTH

    ASSIGNMENT      shift and go to state 50
    DOT             shift and go to state 51


state 18

    (30) state -> expression_array_call . ASSIGNMENT expression

    ASSIGNMENT      shift and go to state 52


state 19

    (31) state -> state_var_def . ASSIGNMENT expression

    ASSIGNMENT      shift and go to state 53


state 20

    (32) state -> state_array_def . ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT

    ASSIGNMENT      shift and go to state 54


state 21

    (51) expression -> FLOAT .

    MULTIPLY        reduce using rule 51 (expression -> FLOAT .)
    DIVIDE          reduce using rule 51 (expression -> FLOAT .)
    PLUS            reduce using rule 51 (expression -> FLOAT .)
    MINUS           reduce using rule 51 (expression -> FLOAT .)
    EQUALS          reduce using rule 51 (expression -> FLOAT .)
    MORE            reduce using rule 51 (expression -> FLOAT .)
    LESS            reduce using rule 51 (expression -> FLOAT .)
    AND             reduce using rule 51 (expression -> FLOAT .)
    OR              reduce using rule 51 (expression -> FLOAT .)
    END_LINE        reduce using rule 51 (expression -> FLOAT .)
    THEN            reduce using rule 51 (expression -> FLOAT .)
    DO              reduce using rule 51 (expression -> FLOAT .)
    ELSE            reduce using rule 51 (expression -> FLOAT .)
    CLOSE_SQUARE_BKT reduce using rule 51 (expression -> FLOAT .)
    COMMA           reduce using rule 51 (expression -> FLOAT .)
    CLOSE_ROUND_BKT reduce using rule 51 (expression -> FLOAT .)
    TO              reduce using rule 51 (expression -> FLOAT .)


state 22

    (52) expression -> BOOL .

    MULTIPLY        reduce using rule 52 (expression -> BOOL .)
    DIVIDE          reduce using rule 52 (expression -> BOOL .)
    PLUS            reduce using rule 52 (expression -> BOOL .)
    MINUS           reduce using rule 52 (expression -> BOOL .)
    EQUALS          reduce using rule 52 (expression -> BOOL .)
    MORE            reduce using rule 52 (expression -> BOOL .)
    LESS            reduce using rule 52 (expression -> BOOL .)
    AND             reduce using rule 52 (expression -> BOOL .)
    OR              reduce using rule 52 (expression -> BOOL .)
    END_LINE        reduce using rule 52 (expression -> BOOL .)
    THEN            reduce using rule 52 (expression -> BOOL .)
    DO              reduce using rule 52 (expression -> BOOL .)
    ELSE            reduce using rule 52 (expression -> BOOL .)
    CLOSE_SQUARE_BKT reduce using rule 52 (expression -> BOOL .)
    COMMA           reduce using rule 52 (expression -> BOOL .)
    CLOSE_ROUND_BKT reduce using rule 52 (expression -> BOOL .)
    TO              reduce using rule 52 (expression -> BOOL .)


state 23

    (54) expression -> STRING .

    MULTIPLY        reduce using rule 54 (expression -> STRING .)
    DIVIDE          reduce using rule 54 (expression -> STRING .)
    PLUS            reduce using rule 54 (expression -> STRING .)
    MINUS           reduce using rule 54 (expression -> STRING .)
    EQUALS          reduce using rule 54 (expression -> STRING .)
    MORE            reduce using rule 54 (expression -> STRING .)
    LESS            reduce using rule 54 (expression -> STRING .)
    AND             reduce using rule 54 (expression -> STRING .)
    OR              reduce using rule 54 (expression -> STRING .)
    END_LINE        reduce using rule 54 (expression -> STRING .)
    THEN            reduce using rule 54 (expression -> STRING .)
    DO              reduce using rule 54 (expression -> STRING .)
    ELSE            reduce using rule 54 (expression -> STRING .)
    CLOSE_SQUARE_BKT reduce using rule 54 (expression -> STRING .)
    COMMA           reduce using rule 54 (expression -> STRING .)
    CLOSE_ROUND_BKT reduce using rule 54 (expression -> STRING .)
    TO              reduce using rule 54 (expression -> STRING .)


state 24

    (1) start -> PROGBEGIN state_list DOT .

    $end            reduce using rule 1 (start -> PROGBEGIN state_list DOT .)


state 25

    (56) expression_name -> NAME .
    (40) expression_array_call -> NAME . OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (38) expression -> NAME . OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> NAME . OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (55) expression -> NAME .

    ASSIGNMENT      reduce using rule 56 (expression_name -> NAME .)
    DOT             reduce using rule 56 (expression_name -> NAME .)
    OPEN_SQUARE_BKT shift and go to state 27
    OPEN_ROUND_BKT  shift and go to state 28
    MULTIPLY        reduce using rule 55 (expression -> NAME .)
    DIVIDE          reduce using rule 55 (expression -> NAME .)
    PLUS            reduce using rule 55 (expression -> NAME .)
    MINUS           reduce using rule 55 (expression -> NAME .)
    EQUALS          reduce using rule 55 (expression -> NAME .)
    MORE            reduce using rule 55 (expression -> NAME .)
    LESS            reduce using rule 55 (expression -> NAME .)
    AND             reduce using rule 55 (expression -> NAME .)
    OR              reduce using rule 55 (expression -> NAME .)
    END_LINE        reduce using rule 55 (expression -> NAME .)
    ELSE            reduce using rule 55 (expression -> NAME .)


state 26

    (2) start -> PROGBEGIN NAME state_list . DOT

    DOT             shift and go to state 55


state 27

    (40) expression_array_call -> NAME OPEN_SQUARE_BKT . expression CLOSE_SQUARE_BKT
    (39) expression -> NAME OPEN_SQUARE_BKT . expression CLOSE_SQUARE_BKT
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 56
    expression_name                shift and go to state 33

state 28

    (38) expression -> NAME OPEN_ROUND_BKT . expr_list CLOSE_ROUND_BKT
    (35) expr_list -> . expression COMMA expr_list
    (36) expr_list -> . expression
    (37) expr_list -> . empty
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (61) empty -> .
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23
    CLOSE_ROUND_BKT reduce using rule 61 (empty -> .)

    expr_list                      shift and go to state 57
    expression                     shift and go to state 58
    empty                          shift and go to state 59
    expression_name                shift and go to state 33

state 29

    (3) state_list -> BLOCK_OPEN state . END_LINE state_list BLOCK_CLOSE
    (4) state_list -> BLOCK_OPEN state . END_LINE BLOCK_CLOSE

    END_LINE        shift and go to state 60


state 30

    (5) state_list -> state END_LINE . state_list
    (6) state_list -> state END_LINE .
    (3) state_list -> . BLOCK_OPEN state END_LINE state_list BLOCK_CLOSE
    (4) state_list -> . BLOCK_OPEN state END_LINE BLOCK_CLOSE
    (5) state_list -> . state END_LINE state_list
    (6) state_list -> . state END_LINE
    (9) state -> . IF expression THEN state_body
    (10) state -> . IF expression THEN state_body ELSE state_body
    (11) state -> . FOR NAME ASSIGNMENT expression TO expression DO state_body
    (12) state -> . WHILE expression DO state_body
    (13) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (21) state -> . RETURN expression
    (22) state -> . RETURN
    (23) state -> . VAR_DEF NAME COLON var_type
    (25) state -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (27) state -> . WRITELN OPEN_ROUND_BKT expression CLOSE_ROUND_BKT
    (28) state -> . READLN OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT
    (29) state -> . expression_name ASSIGNMENT expression
    (30) state -> . expression_array_call ASSIGNMENT expression
    (31) state -> . state_var_def ASSIGNMENT expression
    (32) state -> . state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (33) state -> . expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (34) state -> . expression
    (56) expression_name -> . NAME
    (40) expression_array_call -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (24) state_var_def -> . VAR_DEF NAME COLON var_type
    (26) state_array_def -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME

    DOT             reduce using rule 6 (state_list -> state END_LINE .)
    BLOCK_CLOSE     reduce using rule 6 (state_list -> state END_LINE .)
    BLOCK_OPEN      shift and go to state 5
    IF              shift and go to state 7
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    FUNC_DEF        shift and go to state 11
    RETURN          shift and go to state 13
    VAR_DEF         shift and go to state 14
    WRITELN         shift and go to state 15
    READLN          shift and go to state 16
    NAME            shift and go to state 25
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    state                          shift and go to state 6
    state_list                     shift and go to state 61
    expression                     shift and go to state 8
    expression_name                shift and go to state 17
    expression_array_call          shift and go to state 18
    state_var_def                  shift and go to state 19
    state_array_def                shift and go to state 20

state 31

    (9) state -> IF expression . THEN state_body
    (10) state -> IF expression . THEN state_body ELSE state_body
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    THEN            shift and go to state 62
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    EQUALS          shift and go to state 38
    MORE            shift and go to state 39
    LESS            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 32

    (38) expression -> NAME . OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> NAME . OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (55) expression -> NAME .
    (56) expression_name -> NAME .

    OPEN_ROUND_BKT  shift and go to state 28
    OPEN_SQUARE_BKT shift and go to state 63
    THEN            reduce using rule 55 (expression -> NAME .)
    MULTIPLY        reduce using rule 55 (expression -> NAME .)
    DIVIDE          reduce using rule 55 (expression -> NAME .)
    PLUS            reduce using rule 55 (expression -> NAME .)
    MINUS           reduce using rule 55 (expression -> NAME .)
    EQUALS          reduce using rule 55 (expression -> NAME .)
    MORE            reduce using rule 55 (expression -> NAME .)
    LESS            reduce using rule 55 (expression -> NAME .)
    AND             reduce using rule 55 (expression -> NAME .)
    OR              reduce using rule 55 (expression -> NAME .)
    DO              reduce using rule 55 (expression -> NAME .)
    END_LINE        reduce using rule 55 (expression -> NAME .)
    ELSE            reduce using rule 55 (expression -> NAME .)
    CLOSE_SQUARE_BKT reduce using rule 55 (expression -> NAME .)
    COMMA           reduce using rule 55 (expression -> NAME .)
    CLOSE_ROUND_BKT reduce using rule 55 (expression -> NAME .)
    TO              reduce using rule 55 (expression -> NAME .)
    DOT             reduce using rule 56 (expression_name -> NAME .)


state 33

    (53) expression -> expression_name . DOT LENGTH

    DOT             shift and go to state 51


state 34

    (41) expression -> expression MULTIPLY . expression
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 64
    expression_name                shift and go to state 33

state 35

    (42) expression -> expression DIVIDE . expression
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 65
    expression_name                shift and go to state 33

state 36

    (43) expression -> expression PLUS . expression
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 66
    expression_name                shift and go to state 33

state 37

    (44) expression -> expression MINUS . expression
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 67
    expression_name                shift and go to state 33

state 38

    (45) expression -> expression EQUALS . expression
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 68
    expression_name                shift and go to state 33

state 39

    (46) expression -> expression MORE . expression
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 69
    expression_name                shift and go to state 33

state 40

    (47) expression -> expression LESS . expression
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 70
    expression_name                shift and go to state 33

state 41

    (48) expression -> expression AND . expression
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 71
    expression_name                shift and go to state 33

state 42

    (49) expression -> expression OR . expression
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 72
    expression_name                shift and go to state 33

state 43

    (11) state -> FOR NAME . ASSIGNMENT expression TO expression DO state_body

    ASSIGNMENT      shift and go to state 73


state 44

    (12) state -> WHILE expression . DO state_body
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    DO              shift and go to state 74
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    EQUALS          shift and go to state 38
    MORE            shift and go to state 39
    LESS            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 45

    (13) state -> FUNC_DEF NAME . OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> FUNC_DEF NAME . OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> FUNC_DEF NAME . OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE

    OPEN_ROUND_BKT  shift and go to state 75


state 46

    (21) state -> RETURN expression .
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    END_LINE        reduce using rule 21 (state -> RETURN expression .)
    ELSE            reduce using rule 21 (state -> RETURN expression .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    EQUALS          shift and go to state 38
    MORE            shift and go to state 39
    LESS            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 47

    (23) state -> VAR_DEF NAME . COLON var_type
    (25) state -> VAR_DEF NAME . COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (24) state_var_def -> VAR_DEF NAME . COLON var_type
    (26) state_array_def -> VAR_DEF NAME . COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type

    COLON           shift and go to state 76


state 48

    (27) state -> WRITELN OPEN_ROUND_BKT . expression CLOSE_ROUND_BKT
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 77
    expression_name                shift and go to state 33

state 49

    (28) state -> READLN OPEN_ROUND_BKT . NAME CLOSE_ROUND_BKT

    NAME            shift and go to state 78


state 50

    (29) state -> expression_name ASSIGNMENT . expression
    (33) state -> expression_name ASSIGNMENT . OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    OPEN_ROUND_BKT  shift and go to state 80
    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression_name                shift and go to state 33
    expression                     shift and go to state 79

state 51

    (53) expression -> expression_name DOT . LENGTH

    LENGTH          shift and go to state 81


state 52

    (30) state -> expression_array_call ASSIGNMENT . expression
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 82
    expression_name                shift and go to state 33

state 53

    (31) state -> state_var_def ASSIGNMENT . expression
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 83
    expression_name                shift and go to state 33

state 54

    (32) state -> state_array_def ASSIGNMENT . OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT

    OPEN_ROUND_BKT  shift and go to state 84


state 55

    (2) start -> PROGBEGIN NAME state_list DOT .

    $end            reduce using rule 2 (start -> PROGBEGIN NAME state_list DOT .)


state 56

    (40) expression_array_call -> NAME OPEN_SQUARE_BKT expression . CLOSE_SQUARE_BKT
    (39) expression -> NAME OPEN_SQUARE_BKT expression . CLOSE_SQUARE_BKT
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    CLOSE_SQUARE_BKT shift and go to state 85
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    EQUALS          shift and go to state 38
    MORE            shift and go to state 39
    LESS            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 57

    (38) expression -> NAME OPEN_ROUND_BKT expr_list . CLOSE_ROUND_BKT

    CLOSE_ROUND_BKT shift and go to state 86


state 58

    (35) expr_list -> expression . COMMA expr_list
    (36) expr_list -> expression .
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    COMMA           shift and go to state 87
    CLOSE_ROUND_BKT reduce using rule 36 (expr_list -> expression .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    EQUALS          shift and go to state 38
    MORE            shift and go to state 39
    LESS            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 59

    (37) expr_list -> empty .

    CLOSE_ROUND_BKT reduce using rule 37 (expr_list -> empty .)


state 60

    (3) state_list -> BLOCK_OPEN state END_LINE . state_list BLOCK_CLOSE
    (4) state_list -> BLOCK_OPEN state END_LINE . BLOCK_CLOSE
    (3) state_list -> . BLOCK_OPEN state END_LINE state_list BLOCK_CLOSE
    (4) state_list -> . BLOCK_OPEN state END_LINE BLOCK_CLOSE
    (5) state_list -> . state END_LINE state_list
    (6) state_list -> . state END_LINE
    (9) state -> . IF expression THEN state_body
    (10) state -> . IF expression THEN state_body ELSE state_body
    (11) state -> . FOR NAME ASSIGNMENT expression TO expression DO state_body
    (12) state -> . WHILE expression DO state_body
    (13) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (21) state -> . RETURN expression
    (22) state -> . RETURN
    (23) state -> . VAR_DEF NAME COLON var_type
    (25) state -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (27) state -> . WRITELN OPEN_ROUND_BKT expression CLOSE_ROUND_BKT
    (28) state -> . READLN OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT
    (29) state -> . expression_name ASSIGNMENT expression
    (30) state -> . expression_array_call ASSIGNMENT expression
    (31) state -> . state_var_def ASSIGNMENT expression
    (32) state -> . state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (33) state -> . expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (34) state -> . expression
    (56) expression_name -> . NAME
    (40) expression_array_call -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (24) state_var_def -> . VAR_DEF NAME COLON var_type
    (26) state_array_def -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME

    BLOCK_CLOSE     shift and go to state 89
    BLOCK_OPEN      shift and go to state 5
    IF              shift and go to state 7
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    FUNC_DEF        shift and go to state 11
    RETURN          shift and go to state 13
    VAR_DEF         shift and go to state 14
    WRITELN         shift and go to state 15
    READLN          shift and go to state 16
    NAME            shift and go to state 25
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    state                          shift and go to state 6
    state_list                     shift and go to state 88
    expression                     shift and go to state 8
    expression_name                shift and go to state 17
    expression_array_call          shift and go to state 18
    state_var_def                  shift and go to state 19
    state_array_def                shift and go to state 20

state 61

    (5) state_list -> state END_LINE state_list .

    DOT             reduce using rule 5 (state_list -> state END_LINE state_list .)
    BLOCK_CLOSE     reduce using rule 5 (state_list -> state END_LINE state_list .)


state 62

    (9) state -> IF expression THEN . state_body
    (10) state -> IF expression THEN . state_body ELSE state_body
    (7) state_body -> . BLOCK_OPEN state_list BLOCK_CLOSE
    (8) state_body -> . state
    (9) state -> . IF expression THEN state_body
    (10) state -> . IF expression THEN state_body ELSE state_body
    (11) state -> . FOR NAME ASSIGNMENT expression TO expression DO state_body
    (12) state -> . WHILE expression DO state_body
    (13) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (21) state -> . RETURN expression
    (22) state -> . RETURN
    (23) state -> . VAR_DEF NAME COLON var_type
    (25) state -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (27) state -> . WRITELN OPEN_ROUND_BKT expression CLOSE_ROUND_BKT
    (28) state -> . READLN OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT
    (29) state -> . expression_name ASSIGNMENT expression
    (30) state -> . expression_array_call ASSIGNMENT expression
    (31) state -> . state_var_def ASSIGNMENT expression
    (32) state -> . state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (33) state -> . expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (34) state -> . expression
    (56) expression_name -> . NAME
    (40) expression_array_call -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (24) state_var_def -> . VAR_DEF NAME COLON var_type
    (26) state_array_def -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME

    BLOCK_OPEN      shift and go to state 91
    IF              shift and go to state 7
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    FUNC_DEF        shift and go to state 11
    RETURN          shift and go to state 13
    VAR_DEF         shift and go to state 14
    WRITELN         shift and go to state 15
    READLN          shift and go to state 16
    NAME            shift and go to state 25
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 8
    state_body                     shift and go to state 90
    state                          shift and go to state 92
    expression_name                shift and go to state 17
    expression_array_call          shift and go to state 18
    state_var_def                  shift and go to state 19
    state_array_def                shift and go to state 20

state 63

    (39) expression -> NAME OPEN_SQUARE_BKT . expression CLOSE_SQUARE_BKT
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 93
    expression_name                shift and go to state 33

state 64

    (41) expression -> expression MULTIPLY expression .
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    MULTIPLY        reduce using rule 41 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 41 (expression -> expression MULTIPLY expression .)
    PLUS            reduce using rule 41 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 41 (expression -> expression MULTIPLY expression .)
    EQUALS          reduce using rule 41 (expression -> expression MULTIPLY expression .)
    MORE            reduce using rule 41 (expression -> expression MULTIPLY expression .)
    LESS            reduce using rule 41 (expression -> expression MULTIPLY expression .)
    AND             reduce using rule 41 (expression -> expression MULTIPLY expression .)
    OR              reduce using rule 41 (expression -> expression MULTIPLY expression .)
    END_LINE        reduce using rule 41 (expression -> expression MULTIPLY expression .)
    THEN            reduce using rule 41 (expression -> expression MULTIPLY expression .)
    DO              reduce using rule 41 (expression -> expression MULTIPLY expression .)
    ELSE            reduce using rule 41 (expression -> expression MULTIPLY expression .)
    CLOSE_SQUARE_BKT reduce using rule 41 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 41 (expression -> expression MULTIPLY expression .)
    CLOSE_ROUND_BKT reduce using rule 41 (expression -> expression MULTIPLY expression .)
    TO              reduce using rule 41 (expression -> expression MULTIPLY expression .)

  ! MULTIPLY        [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! EQUALS          [ shift and go to state 38 ]
  ! MORE            [ shift and go to state 39 ]
  ! LESS            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 65

    (42) expression -> expression DIVIDE expression .
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    MULTIPLY        reduce using rule 42 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 42 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 42 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 42 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 42 (expression -> expression DIVIDE expression .)
    MORE            reduce using rule 42 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 42 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 42 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 42 (expression -> expression DIVIDE expression .)
    END_LINE        reduce using rule 42 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 42 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 42 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 42 (expression -> expression DIVIDE expression .)
    CLOSE_SQUARE_BKT reduce using rule 42 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 42 (expression -> expression DIVIDE expression .)
    CLOSE_ROUND_BKT reduce using rule 42 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 42 (expression -> expression DIVIDE expression .)

  ! MULTIPLY        [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 35 ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! EQUALS          [ shift and go to state 38 ]
  ! MORE            [ shift and go to state 39 ]
  ! LESS            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 66

    (43) expression -> expression PLUS expression .
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 43 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 43 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 43 (expression -> expression PLUS expression .)
    MORE            reduce using rule 43 (expression -> expression PLUS expression .)
    LESS            reduce using rule 43 (expression -> expression PLUS expression .)
    AND             reduce using rule 43 (expression -> expression PLUS expression .)
    OR              reduce using rule 43 (expression -> expression PLUS expression .)
    END_LINE        reduce using rule 43 (expression -> expression PLUS expression .)
    THEN            reduce using rule 43 (expression -> expression PLUS expression .)
    DO              reduce using rule 43 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 43 (expression -> expression PLUS expression .)
    CLOSE_SQUARE_BKT reduce using rule 43 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 43 (expression -> expression PLUS expression .)
    CLOSE_ROUND_BKT reduce using rule 43 (expression -> expression PLUS expression .)
    TO              reduce using rule 43 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35

  ! MULTIPLY        [ reduce using rule 43 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! EQUALS          [ shift and go to state 38 ]
  ! MORE            [ shift and go to state 39 ]
  ! LESS            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 67

    (44) expression -> expression MINUS expression .
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    PLUS            reduce using rule 44 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 44 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 44 (expression -> expression MINUS expression .)
    MORE            reduce using rule 44 (expression -> expression MINUS expression .)
    LESS            reduce using rule 44 (expression -> expression MINUS expression .)
    AND             reduce using rule 44 (expression -> expression MINUS expression .)
    OR              reduce using rule 44 (expression -> expression MINUS expression .)
    END_LINE        reduce using rule 44 (expression -> expression MINUS expression .)
    THEN            reduce using rule 44 (expression -> expression MINUS expression .)
    DO              reduce using rule 44 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 44 (expression -> expression MINUS expression .)
    CLOSE_SQUARE_BKT reduce using rule 44 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 44 (expression -> expression MINUS expression .)
    CLOSE_ROUND_BKT reduce using rule 44 (expression -> expression MINUS expression .)
    TO              reduce using rule 44 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35

  ! MULTIPLY        [ reduce using rule 44 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! EQUALS          [ shift and go to state 38 ]
  ! MORE            [ shift and go to state 39 ]
  ! LESS            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 68

    (45) expression -> expression EQUALS expression .
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    EQUALS          reduce using rule 45 (expression -> expression EQUALS expression .)
    MORE            reduce using rule 45 (expression -> expression EQUALS expression .)
    LESS            reduce using rule 45 (expression -> expression EQUALS expression .)
    AND             reduce using rule 45 (expression -> expression EQUALS expression .)
    OR              reduce using rule 45 (expression -> expression EQUALS expression .)
    END_LINE        reduce using rule 45 (expression -> expression EQUALS expression .)
    THEN            reduce using rule 45 (expression -> expression EQUALS expression .)
    DO              reduce using rule 45 (expression -> expression EQUALS expression .)
    ELSE            reduce using rule 45 (expression -> expression EQUALS expression .)
    CLOSE_SQUARE_BKT reduce using rule 45 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 45 (expression -> expression EQUALS expression .)
    CLOSE_ROUND_BKT reduce using rule 45 (expression -> expression EQUALS expression .)
    TO              reduce using rule 45 (expression -> expression EQUALS expression .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37

  ! MULTIPLY        [ reduce using rule 45 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression EQUALS expression .) ]
  ! PLUS            [ reduce using rule 45 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ shift and go to state 38 ]
  ! MORE            [ shift and go to state 39 ]
  ! LESS            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 69

    (46) expression -> expression MORE expression .
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    EQUALS          reduce using rule 46 (expression -> expression MORE expression .)
    MORE            reduce using rule 46 (expression -> expression MORE expression .)
    LESS            reduce using rule 46 (expression -> expression MORE expression .)
    AND             reduce using rule 46 (expression -> expression MORE expression .)
    OR              reduce using rule 46 (expression -> expression MORE expression .)
    END_LINE        reduce using rule 46 (expression -> expression MORE expression .)
    THEN            reduce using rule 46 (expression -> expression MORE expression .)
    DO              reduce using rule 46 (expression -> expression MORE expression .)
    ELSE            reduce using rule 46 (expression -> expression MORE expression .)
    CLOSE_SQUARE_BKT reduce using rule 46 (expression -> expression MORE expression .)
    COMMA           reduce using rule 46 (expression -> expression MORE expression .)
    CLOSE_ROUND_BKT reduce using rule 46 (expression -> expression MORE expression .)
    TO              reduce using rule 46 (expression -> expression MORE expression .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37

  ! MULTIPLY        [ reduce using rule 46 (expression -> expression MORE expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression MORE expression .) ]
  ! PLUS            [ reduce using rule 46 (expression -> expression MORE expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression MORE expression .) ]
  ! EQUALS          [ shift and go to state 38 ]
  ! MORE            [ shift and go to state 39 ]
  ! LESS            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 70

    (47) expression -> expression LESS expression .
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    EQUALS          reduce using rule 47 (expression -> expression LESS expression .)
    MORE            reduce using rule 47 (expression -> expression LESS expression .)
    LESS            reduce using rule 47 (expression -> expression LESS expression .)
    AND             reduce using rule 47 (expression -> expression LESS expression .)
    OR              reduce using rule 47 (expression -> expression LESS expression .)
    END_LINE        reduce using rule 47 (expression -> expression LESS expression .)
    THEN            reduce using rule 47 (expression -> expression LESS expression .)
    DO              reduce using rule 47 (expression -> expression LESS expression .)
    ELSE            reduce using rule 47 (expression -> expression LESS expression .)
    CLOSE_SQUARE_BKT reduce using rule 47 (expression -> expression LESS expression .)
    COMMA           reduce using rule 47 (expression -> expression LESS expression .)
    CLOSE_ROUND_BKT reduce using rule 47 (expression -> expression LESS expression .)
    TO              reduce using rule 47 (expression -> expression LESS expression .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37

  ! MULTIPLY        [ reduce using rule 47 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression LESS expression .) ]
  ! PLUS            [ reduce using rule 47 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression LESS expression .) ]
  ! EQUALS          [ shift and go to state 38 ]
  ! MORE            [ shift and go to state 39 ]
  ! LESS            [ shift and go to state 40 ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 71

    (48) expression -> expression AND expression .
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    AND             reduce using rule 48 (expression -> expression AND expression .)
    OR              reduce using rule 48 (expression -> expression AND expression .)
    END_LINE        reduce using rule 48 (expression -> expression AND expression .)
    THEN            reduce using rule 48 (expression -> expression AND expression .)
    DO              reduce using rule 48 (expression -> expression AND expression .)
    ELSE            reduce using rule 48 (expression -> expression AND expression .)
    CLOSE_SQUARE_BKT reduce using rule 48 (expression -> expression AND expression .)
    COMMA           reduce using rule 48 (expression -> expression AND expression .)
    CLOSE_ROUND_BKT reduce using rule 48 (expression -> expression AND expression .)
    TO              reduce using rule 48 (expression -> expression AND expression .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    EQUALS          shift and go to state 38
    MORE            shift and go to state 39
    LESS            shift and go to state 40

  ! MULTIPLY        [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! MORE            [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 48 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 41 ]
  ! OR              [ shift and go to state 42 ]


state 72

    (49) expression -> expression OR expression .
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    OR              reduce using rule 49 (expression -> expression OR expression .)
    END_LINE        reduce using rule 49 (expression -> expression OR expression .)
    THEN            reduce using rule 49 (expression -> expression OR expression .)
    DO              reduce using rule 49 (expression -> expression OR expression .)
    ELSE            reduce using rule 49 (expression -> expression OR expression .)
    CLOSE_SQUARE_BKT reduce using rule 49 (expression -> expression OR expression .)
    COMMA           reduce using rule 49 (expression -> expression OR expression .)
    CLOSE_ROUND_BKT reduce using rule 49 (expression -> expression OR expression .)
    TO              reduce using rule 49 (expression -> expression OR expression .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    EQUALS          shift and go to state 38
    MORE            shift and go to state 39
    LESS            shift and go to state 40
    AND             shift and go to state 41

  ! MULTIPLY        [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! MORE            [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 49 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 42 ]


state 73

    (11) state -> FOR NAME ASSIGNMENT . expression TO expression DO state_body
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 94
    expression_name                shift and go to state 33

state 74

    (12) state -> WHILE expression DO . state_body
    (7) state_body -> . BLOCK_OPEN state_list BLOCK_CLOSE
    (8) state_body -> . state
    (9) state -> . IF expression THEN state_body
    (10) state -> . IF expression THEN state_body ELSE state_body
    (11) state -> . FOR NAME ASSIGNMENT expression TO expression DO state_body
    (12) state -> . WHILE expression DO state_body
    (13) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (21) state -> . RETURN expression
    (22) state -> . RETURN
    (23) state -> . VAR_DEF NAME COLON var_type
    (25) state -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (27) state -> . WRITELN OPEN_ROUND_BKT expression CLOSE_ROUND_BKT
    (28) state -> . READLN OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT
    (29) state -> . expression_name ASSIGNMENT expression
    (30) state -> . expression_array_call ASSIGNMENT expression
    (31) state -> . state_var_def ASSIGNMENT expression
    (32) state -> . state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (33) state -> . expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (34) state -> . expression
    (56) expression_name -> . NAME
    (40) expression_array_call -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (24) state_var_def -> . VAR_DEF NAME COLON var_type
    (26) state_array_def -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME

    BLOCK_OPEN      shift and go to state 91
    IF              shift and go to state 7
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    FUNC_DEF        shift and go to state 11
    RETURN          shift and go to state 13
    VAR_DEF         shift and go to state 14
    WRITELN         shift and go to state 15
    READLN          shift and go to state 16
    NAME            shift and go to state 25
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 8
    state_body                     shift and go to state 95
    state                          shift and go to state 92
    expression_name                shift and go to state 17
    expression_array_call          shift and go to state 18
    state_var_def                  shift and go to state 19
    state_array_def                shift and go to state 20

state 75

    (13) state -> FUNC_DEF NAME OPEN_ROUND_BKT . argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> FUNC_DEF NAME OPEN_ROUND_BKT . argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> FUNC_DEF NAME OPEN_ROUND_BKT . argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (16) argument_list -> . NAME COLON var_type COMMA argument_list
    (17) argument_list -> . NAME COLON var_type
    (18) argument_list -> . NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type COMMA argument_list
    (19) argument_list -> . NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (20) argument_list -> . empty
    (61) empty -> .

    NAME            shift and go to state 96
    CLOSE_ROUND_BKT reduce using rule 61 (empty -> .)

    argument_list                  shift and go to state 97
    empty                          shift and go to state 98

state 76

    (23) state -> VAR_DEF NAME COLON . var_type
    (25) state -> VAR_DEF NAME COLON . ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (24) state_var_def -> VAR_DEF NAME COLON . var_type
    (26) state_array_def -> VAR_DEF NAME COLON . ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (57) var_type -> . FLOAT_TYPE
    (58) var_type -> . INT_TYPE
    (59) var_type -> . STRING_TYPE
    (60) var_type -> . BOOL_TYPE

    ARRAY           shift and go to state 100
    FLOAT_TYPE      shift and go to state 101
    INT_TYPE        shift and go to state 102
    STRING_TYPE     shift and go to state 103
    BOOL_TYPE       shift and go to state 104

    var_type                       shift and go to state 99

state 77

    (27) state -> WRITELN OPEN_ROUND_BKT expression . CLOSE_ROUND_BKT
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    CLOSE_ROUND_BKT shift and go to state 105
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    EQUALS          shift and go to state 38
    MORE            shift and go to state 39
    LESS            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 78

    (28) state -> READLN OPEN_ROUND_BKT NAME . CLOSE_ROUND_BKT

    CLOSE_ROUND_BKT shift and go to state 106


state 79

    (29) state -> expression_name ASSIGNMENT expression .
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    END_LINE        reduce using rule 29 (state -> expression_name ASSIGNMENT expression .)
    ELSE            reduce using rule 29 (state -> expression_name ASSIGNMENT expression .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    EQUALS          shift and go to state 38
    MORE            shift and go to state 39
    LESS            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 80

    (33) state -> expression_name ASSIGNMENT OPEN_ROUND_BKT . expr_list CLOSE_ROUND_BKT
    (35) expr_list -> . expression COMMA expr_list
    (36) expr_list -> . expression
    (37) expr_list -> . empty
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (61) empty -> .
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23
    CLOSE_ROUND_BKT reduce using rule 61 (empty -> .)

    expression_name                shift and go to state 33
    expr_list                      shift and go to state 107
    expression                     shift and go to state 58
    empty                          shift and go to state 59

state 81

    (53) expression -> expression_name DOT LENGTH .

    MULTIPLY        reduce using rule 53 (expression -> expression_name DOT LENGTH .)
    DIVIDE          reduce using rule 53 (expression -> expression_name DOT LENGTH .)
    PLUS            reduce using rule 53 (expression -> expression_name DOT LENGTH .)
    MINUS           reduce using rule 53 (expression -> expression_name DOT LENGTH .)
    EQUALS          reduce using rule 53 (expression -> expression_name DOT LENGTH .)
    MORE            reduce using rule 53 (expression -> expression_name DOT LENGTH .)
    LESS            reduce using rule 53 (expression -> expression_name DOT LENGTH .)
    AND             reduce using rule 53 (expression -> expression_name DOT LENGTH .)
    OR              reduce using rule 53 (expression -> expression_name DOT LENGTH .)
    END_LINE        reduce using rule 53 (expression -> expression_name DOT LENGTH .)
    THEN            reduce using rule 53 (expression -> expression_name DOT LENGTH .)
    DO              reduce using rule 53 (expression -> expression_name DOT LENGTH .)
    ELSE            reduce using rule 53 (expression -> expression_name DOT LENGTH .)
    CLOSE_SQUARE_BKT reduce using rule 53 (expression -> expression_name DOT LENGTH .)
    COMMA           reduce using rule 53 (expression -> expression_name DOT LENGTH .)
    CLOSE_ROUND_BKT reduce using rule 53 (expression -> expression_name DOT LENGTH .)
    TO              reduce using rule 53 (expression -> expression_name DOT LENGTH .)


state 82

    (30) state -> expression_array_call ASSIGNMENT expression .
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    END_LINE        reduce using rule 30 (state -> expression_array_call ASSIGNMENT expression .)
    ELSE            reduce using rule 30 (state -> expression_array_call ASSIGNMENT expression .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    EQUALS          shift and go to state 38
    MORE            shift and go to state 39
    LESS            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 83

    (31) state -> state_var_def ASSIGNMENT expression .
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    END_LINE        reduce using rule 31 (state -> state_var_def ASSIGNMENT expression .)
    ELSE            reduce using rule 31 (state -> state_var_def ASSIGNMENT expression .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    EQUALS          shift and go to state 38
    MORE            shift and go to state 39
    LESS            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 84

    (32) state -> state_array_def ASSIGNMENT OPEN_ROUND_BKT . expr_list CLOSE_ROUND_BKT
    (35) expr_list -> . expression COMMA expr_list
    (36) expr_list -> . expression
    (37) expr_list -> . empty
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (61) empty -> .
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23
    CLOSE_ROUND_BKT reduce using rule 61 (empty -> .)

    expr_list                      shift and go to state 108
    expression                     shift and go to state 58
    empty                          shift and go to state 59
    expression_name                shift and go to state 33

state 85

    (40) expression_array_call -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .
    (39) expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .

    ASSIGNMENT      reduce using rule 40 (expression_array_call -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    MULTIPLY        reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    DIVIDE          reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    PLUS            reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    MINUS           reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    EQUALS          reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    MORE            reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    LESS            reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    AND             reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    OR              reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    END_LINE        reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    ELSE            reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)


state 86

    (38) expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .

    MULTIPLY        reduce using rule 38 (expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    DIVIDE          reduce using rule 38 (expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    PLUS            reduce using rule 38 (expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    MINUS           reduce using rule 38 (expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    EQUALS          reduce using rule 38 (expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    MORE            reduce using rule 38 (expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    LESS            reduce using rule 38 (expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    AND             reduce using rule 38 (expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    OR              reduce using rule 38 (expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    END_LINE        reduce using rule 38 (expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    THEN            reduce using rule 38 (expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    DO              reduce using rule 38 (expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    ELSE            reduce using rule 38 (expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    CLOSE_SQUARE_BKT reduce using rule 38 (expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    COMMA           reduce using rule 38 (expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    CLOSE_ROUND_BKT reduce using rule 38 (expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    TO              reduce using rule 38 (expression -> NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)


state 87

    (35) expr_list -> expression COMMA . expr_list
    (35) expr_list -> . expression COMMA expr_list
    (36) expr_list -> . expression
    (37) expr_list -> . empty
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (61) empty -> .
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23
    CLOSE_ROUND_BKT reduce using rule 61 (empty -> .)

    expression                     shift and go to state 58
    expr_list                      shift and go to state 109
    empty                          shift and go to state 59
    expression_name                shift and go to state 33

state 88

    (3) state_list -> BLOCK_OPEN state END_LINE state_list . BLOCK_CLOSE

    BLOCK_CLOSE     shift and go to state 110


state 89

    (4) state_list -> BLOCK_OPEN state END_LINE BLOCK_CLOSE .

    DOT             reduce using rule 4 (state_list -> BLOCK_OPEN state END_LINE BLOCK_CLOSE .)
    BLOCK_CLOSE     reduce using rule 4 (state_list -> BLOCK_OPEN state END_LINE BLOCK_CLOSE .)


state 90

    (9) state -> IF expression THEN state_body .
    (10) state -> IF expression THEN state_body . ELSE state_body

  ! shift/reduce conflict for ELSE resolved as shift
    END_LINE        reduce using rule 9 (state -> IF expression THEN state_body .)
    ELSE            shift and go to state 111

  ! ELSE            [ reduce using rule 9 (state -> IF expression THEN state_body .) ]


state 91

    (7) state_body -> BLOCK_OPEN . state_list BLOCK_CLOSE
    (3) state_list -> . BLOCK_OPEN state END_LINE state_list BLOCK_CLOSE
    (4) state_list -> . BLOCK_OPEN state END_LINE BLOCK_CLOSE
    (5) state_list -> . state END_LINE state_list
    (6) state_list -> . state END_LINE
    (9) state -> . IF expression THEN state_body
    (10) state -> . IF expression THEN state_body ELSE state_body
    (11) state -> . FOR NAME ASSIGNMENT expression TO expression DO state_body
    (12) state -> . WHILE expression DO state_body
    (13) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (21) state -> . RETURN expression
    (22) state -> . RETURN
    (23) state -> . VAR_DEF NAME COLON var_type
    (25) state -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (27) state -> . WRITELN OPEN_ROUND_BKT expression CLOSE_ROUND_BKT
    (28) state -> . READLN OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT
    (29) state -> . expression_name ASSIGNMENT expression
    (30) state -> . expression_array_call ASSIGNMENT expression
    (31) state -> . state_var_def ASSIGNMENT expression
    (32) state -> . state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (33) state -> . expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (34) state -> . expression
    (56) expression_name -> . NAME
    (40) expression_array_call -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (24) state_var_def -> . VAR_DEF NAME COLON var_type
    (26) state_array_def -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME

    BLOCK_OPEN      shift and go to state 5
    IF              shift and go to state 7
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    FUNC_DEF        shift and go to state 11
    RETURN          shift and go to state 13
    VAR_DEF         shift and go to state 14
    WRITELN         shift and go to state 15
    READLN          shift and go to state 16
    NAME            shift and go to state 25
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    state_list                     shift and go to state 112
    state                          shift and go to state 6
    expression                     shift and go to state 8
    expression_name                shift and go to state 17
    expression_array_call          shift and go to state 18
    state_var_def                  shift and go to state 19
    state_array_def                shift and go to state 20

state 92

    (8) state_body -> state .

    ELSE            reduce using rule 8 (state_body -> state .)
    END_LINE        reduce using rule 8 (state_body -> state .)


state 93

    (39) expression -> NAME OPEN_SQUARE_BKT expression . CLOSE_SQUARE_BKT
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    CLOSE_SQUARE_BKT shift and go to state 113
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    EQUALS          shift and go to state 38
    MORE            shift and go to state 39
    LESS            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 94

    (11) state -> FOR NAME ASSIGNMENT expression . TO expression DO state_body
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    TO              shift and go to state 114
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    EQUALS          shift and go to state 38
    MORE            shift and go to state 39
    LESS            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 95

    (12) state -> WHILE expression DO state_body .

    END_LINE        reduce using rule 12 (state -> WHILE expression DO state_body .)
    ELSE            reduce using rule 12 (state -> WHILE expression DO state_body .)


state 96

    (16) argument_list -> NAME . COLON var_type COMMA argument_list
    (17) argument_list -> NAME . COLON var_type
    (18) argument_list -> NAME . COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type COMMA argument_list
    (19) argument_list -> NAME . COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type

    COLON           shift and go to state 115


state 97

    (13) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list . CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list . CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list . CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE

    CLOSE_ROUND_BKT shift and go to state 116


state 98

    (20) argument_list -> empty .

    CLOSE_ROUND_BKT reduce using rule 20 (argument_list -> empty .)


state 99

    (23) state -> VAR_DEF NAME COLON var_type .
    (24) state_var_def -> VAR_DEF NAME COLON var_type .

    END_LINE        reduce using rule 23 (state -> VAR_DEF NAME COLON var_type .)
    ELSE            reduce using rule 23 (state -> VAR_DEF NAME COLON var_type .)
    ASSIGNMENT      reduce using rule 24 (state_var_def -> VAR_DEF NAME COLON var_type .)


state 100

    (25) state -> VAR_DEF NAME COLON ARRAY . OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (26) state_array_def -> VAR_DEF NAME COLON ARRAY . OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type

    OPEN_SQUARE_BKT shift and go to state 117


state 101

    (57) var_type -> FLOAT_TYPE .

    END_LINE        reduce using rule 57 (var_type -> FLOAT_TYPE .)
    ASSIGNMENT      reduce using rule 57 (var_type -> FLOAT_TYPE .)
    ELSE            reduce using rule 57 (var_type -> FLOAT_TYPE .)
    COMMA           reduce using rule 57 (var_type -> FLOAT_TYPE .)
    CLOSE_ROUND_BKT reduce using rule 57 (var_type -> FLOAT_TYPE .)


state 102

    (58) var_type -> INT_TYPE .

    END_LINE        reduce using rule 58 (var_type -> INT_TYPE .)
    ASSIGNMENT      reduce using rule 58 (var_type -> INT_TYPE .)
    ELSE            reduce using rule 58 (var_type -> INT_TYPE .)
    COMMA           reduce using rule 58 (var_type -> INT_TYPE .)
    CLOSE_ROUND_BKT reduce using rule 58 (var_type -> INT_TYPE .)


state 103

    (59) var_type -> STRING_TYPE .

    END_LINE        reduce using rule 59 (var_type -> STRING_TYPE .)
    ASSIGNMENT      reduce using rule 59 (var_type -> STRING_TYPE .)
    ELSE            reduce using rule 59 (var_type -> STRING_TYPE .)
    COMMA           reduce using rule 59 (var_type -> STRING_TYPE .)
    CLOSE_ROUND_BKT reduce using rule 59 (var_type -> STRING_TYPE .)


state 104

    (60) var_type -> BOOL_TYPE .

    END_LINE        reduce using rule 60 (var_type -> BOOL_TYPE .)
    ASSIGNMENT      reduce using rule 60 (var_type -> BOOL_TYPE .)
    ELSE            reduce using rule 60 (var_type -> BOOL_TYPE .)
    COMMA           reduce using rule 60 (var_type -> BOOL_TYPE .)
    CLOSE_ROUND_BKT reduce using rule 60 (var_type -> BOOL_TYPE .)


state 105

    (27) state -> WRITELN OPEN_ROUND_BKT expression CLOSE_ROUND_BKT .

    END_LINE        reduce using rule 27 (state -> WRITELN OPEN_ROUND_BKT expression CLOSE_ROUND_BKT .)
    ELSE            reduce using rule 27 (state -> WRITELN OPEN_ROUND_BKT expression CLOSE_ROUND_BKT .)


state 106

    (28) state -> READLN OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT .

    END_LINE        reduce using rule 28 (state -> READLN OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT .)
    ELSE            reduce using rule 28 (state -> READLN OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT .)


state 107

    (33) state -> expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list . CLOSE_ROUND_BKT

    CLOSE_ROUND_BKT shift and go to state 118


state 108

    (32) state -> state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list . CLOSE_ROUND_BKT

    CLOSE_ROUND_BKT shift and go to state 119


state 109

    (35) expr_list -> expression COMMA expr_list .

    CLOSE_ROUND_BKT reduce using rule 35 (expr_list -> expression COMMA expr_list .)


state 110

    (3) state_list -> BLOCK_OPEN state END_LINE state_list BLOCK_CLOSE .

    DOT             reduce using rule 3 (state_list -> BLOCK_OPEN state END_LINE state_list BLOCK_CLOSE .)
    BLOCK_CLOSE     reduce using rule 3 (state_list -> BLOCK_OPEN state END_LINE state_list BLOCK_CLOSE .)


state 111

    (10) state -> IF expression THEN state_body ELSE . state_body
    (7) state_body -> . BLOCK_OPEN state_list BLOCK_CLOSE
    (8) state_body -> . state
    (9) state -> . IF expression THEN state_body
    (10) state -> . IF expression THEN state_body ELSE state_body
    (11) state -> . FOR NAME ASSIGNMENT expression TO expression DO state_body
    (12) state -> . WHILE expression DO state_body
    (13) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (21) state -> . RETURN expression
    (22) state -> . RETURN
    (23) state -> . VAR_DEF NAME COLON var_type
    (25) state -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (27) state -> . WRITELN OPEN_ROUND_BKT expression CLOSE_ROUND_BKT
    (28) state -> . READLN OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT
    (29) state -> . expression_name ASSIGNMENT expression
    (30) state -> . expression_array_call ASSIGNMENT expression
    (31) state -> . state_var_def ASSIGNMENT expression
    (32) state -> . state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (33) state -> . expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (34) state -> . expression
    (56) expression_name -> . NAME
    (40) expression_array_call -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (24) state_var_def -> . VAR_DEF NAME COLON var_type
    (26) state_array_def -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME

    BLOCK_OPEN      shift and go to state 91
    IF              shift and go to state 7
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    FUNC_DEF        shift and go to state 11
    RETURN          shift and go to state 13
    VAR_DEF         shift and go to state 14
    WRITELN         shift and go to state 15
    READLN          shift and go to state 16
    NAME            shift and go to state 25
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 8
    state_body                     shift and go to state 120
    state                          shift and go to state 92
    expression_name                shift and go to state 17
    expression_array_call          shift and go to state 18
    state_var_def                  shift and go to state 19
    state_array_def                shift and go to state 20

state 112

    (7) state_body -> BLOCK_OPEN state_list . BLOCK_CLOSE

    BLOCK_CLOSE     shift and go to state 121


state 113

    (39) expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .

    THEN            reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    MULTIPLY        reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    DIVIDE          reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    PLUS            reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    MINUS           reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    EQUALS          reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    MORE            reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    LESS            reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    AND             reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    OR              reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    DO              reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    END_LINE        reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    ELSE            reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    CLOSE_SQUARE_BKT reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    COMMA           reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    CLOSE_ROUND_BKT reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)
    TO              reduce using rule 39 (expression -> NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT .)


state 114

    (11) state -> FOR NAME ASSIGNMENT expression TO . expression DO state_body
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME
    (56) expression_name -> . NAME

    NAME            shift and go to state 32
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 122
    expression_name                shift and go to state 33

state 115

    (16) argument_list -> NAME COLON . var_type COMMA argument_list
    (17) argument_list -> NAME COLON . var_type
    (18) argument_list -> NAME COLON . ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type COMMA argument_list
    (19) argument_list -> NAME COLON . ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (57) var_type -> . FLOAT_TYPE
    (58) var_type -> . INT_TYPE
    (59) var_type -> . STRING_TYPE
    (60) var_type -> . BOOL_TYPE

    ARRAY           shift and go to state 124
    FLOAT_TYPE      shift and go to state 101
    INT_TYPE        shift and go to state 102
    STRING_TYPE     shift and go to state 103
    BOOL_TYPE       shift and go to state 104

    var_type                       shift and go to state 123

state 116

    (13) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT . COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT . COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT . COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE

    COLON           shift and go to state 125


state 117

    (25) state -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT . INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (26) state_array_def -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT . INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type

    INT             shift and go to state 126


state 118

    (33) state -> expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .

    END_LINE        reduce using rule 33 (state -> expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    ELSE            reduce using rule 33 (state -> expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)


state 119

    (32) state -> state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .

    END_LINE        reduce using rule 32 (state -> state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)
    ELSE            reduce using rule 32 (state -> state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT .)


state 120

    (10) state -> IF expression THEN state_body ELSE state_body .

    END_LINE        reduce using rule 10 (state -> IF expression THEN state_body ELSE state_body .)
    ELSE            reduce using rule 10 (state -> IF expression THEN state_body ELSE state_body .)


state 121

    (7) state_body -> BLOCK_OPEN state_list BLOCK_CLOSE .

    ELSE            reduce using rule 7 (state_body -> BLOCK_OPEN state_list BLOCK_CLOSE .)
    END_LINE        reduce using rule 7 (state_body -> BLOCK_OPEN state_list BLOCK_CLOSE .)


state 122

    (11) state -> FOR NAME ASSIGNMENT expression TO expression . DO state_body
    (41) expression -> expression . MULTIPLY expression
    (42) expression -> expression . DIVIDE expression
    (43) expression -> expression . PLUS expression
    (44) expression -> expression . MINUS expression
    (45) expression -> expression . EQUALS expression
    (46) expression -> expression . MORE expression
    (47) expression -> expression . LESS expression
    (48) expression -> expression . AND expression
    (49) expression -> expression . OR expression

    DO              shift and go to state 127
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 35
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    EQUALS          shift and go to state 38
    MORE            shift and go to state 39
    LESS            shift and go to state 40
    AND             shift and go to state 41
    OR              shift and go to state 42


state 123

    (16) argument_list -> NAME COLON var_type . COMMA argument_list
    (17) argument_list -> NAME COLON var_type .

    COMMA           shift and go to state 128
    CLOSE_ROUND_BKT reduce using rule 17 (argument_list -> NAME COLON var_type .)


state 124

    (18) argument_list -> NAME COLON ARRAY . OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type COMMA argument_list
    (19) argument_list -> NAME COLON ARRAY . OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type

    OPEN_SQUARE_BKT shift and go to state 129


state 125

    (13) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON . var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON . NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON . ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (57) var_type -> . FLOAT_TYPE
    (58) var_type -> . INT_TYPE
    (59) var_type -> . STRING_TYPE
    (60) var_type -> . BOOL_TYPE

    NONE_TYPE       shift and go to state 131
    ARRAY           shift and go to state 132
    FLOAT_TYPE      shift and go to state 101
    INT_TYPE        shift and go to state 102
    STRING_TYPE     shift and go to state 103
    BOOL_TYPE       shift and go to state 104

    var_type                       shift and go to state 130

state 126

    (25) state -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT . DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (26) state_array_def -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT . DOT DOT INT CLOSE_SQUARE_BKT OF var_type

    DOT             shift and go to state 133


state 127

    (11) state -> FOR NAME ASSIGNMENT expression TO expression DO . state_body
    (7) state_body -> . BLOCK_OPEN state_list BLOCK_CLOSE
    (8) state_body -> . state
    (9) state -> . IF expression THEN state_body
    (10) state -> . IF expression THEN state_body ELSE state_body
    (11) state -> . FOR NAME ASSIGNMENT expression TO expression DO state_body
    (12) state -> . WHILE expression DO state_body
    (13) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (21) state -> . RETURN expression
    (22) state -> . RETURN
    (23) state -> . VAR_DEF NAME COLON var_type
    (25) state -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (27) state -> . WRITELN OPEN_ROUND_BKT expression CLOSE_ROUND_BKT
    (28) state -> . READLN OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT
    (29) state -> . expression_name ASSIGNMENT expression
    (30) state -> . expression_array_call ASSIGNMENT expression
    (31) state -> . state_var_def ASSIGNMENT expression
    (32) state -> . state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (33) state -> . expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (34) state -> . expression
    (56) expression_name -> . NAME
    (40) expression_array_call -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (24) state_var_def -> . VAR_DEF NAME COLON var_type
    (26) state_array_def -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME

    BLOCK_OPEN      shift and go to state 91
    IF              shift and go to state 7
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    FUNC_DEF        shift and go to state 11
    RETURN          shift and go to state 13
    VAR_DEF         shift and go to state 14
    WRITELN         shift and go to state 15
    READLN          shift and go to state 16
    NAME            shift and go to state 25
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    expression                     shift and go to state 8
    state_body                     shift and go to state 134
    state                          shift and go to state 92
    expression_name                shift and go to state 17
    expression_array_call          shift and go to state 18
    state_var_def                  shift and go to state 19
    state_array_def                shift and go to state 20

state 128

    (16) argument_list -> NAME COLON var_type COMMA . argument_list
    (16) argument_list -> . NAME COLON var_type COMMA argument_list
    (17) argument_list -> . NAME COLON var_type
    (18) argument_list -> . NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type COMMA argument_list
    (19) argument_list -> . NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (20) argument_list -> . empty
    (61) empty -> .

    NAME            shift and go to state 96
    CLOSE_ROUND_BKT reduce using rule 61 (empty -> .)

    argument_list                  shift and go to state 135
    empty                          shift and go to state 98

state 129

    (18) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT . INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type COMMA argument_list
    (19) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT . INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type

    INT             shift and go to state 136


state 130

    (13) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type . END_LINE BLOCK_OPEN state_list BLOCK_CLOSE

    END_LINE        shift and go to state 137


state 131

    (14) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE . END_LINE BLOCK_OPEN state_list BLOCK_CLOSE

    END_LINE        shift and go to state 138


state 132

    (15) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY . OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE

    OPEN_SQUARE_BKT shift and go to state 139


state 133

    (25) state -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT . DOT INT CLOSE_SQUARE_BKT OF var_type
    (26) state_array_def -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT . DOT INT CLOSE_SQUARE_BKT OF var_type

    DOT             shift and go to state 140


state 134

    (11) state -> FOR NAME ASSIGNMENT expression TO expression DO state_body .

    END_LINE        reduce using rule 11 (state -> FOR NAME ASSIGNMENT expression TO expression DO state_body .)
    ELSE            reduce using rule 11 (state -> FOR NAME ASSIGNMENT expression TO expression DO state_body .)


state 135

    (16) argument_list -> NAME COLON var_type COMMA argument_list .

    CLOSE_ROUND_BKT reduce using rule 16 (argument_list -> NAME COLON var_type COMMA argument_list .)


state 136

    (18) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT . DOT DOT INT CLOSE_SQUARE_BKT OF var_type COMMA argument_list
    (19) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT . DOT DOT INT CLOSE_SQUARE_BKT OF var_type

    DOT             shift and go to state 141


state 137

    (13) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE . BLOCK_OPEN state_list BLOCK_CLOSE

    BLOCK_OPEN      shift and go to state 142


state 138

    (14) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE . BLOCK_OPEN state_list BLOCK_CLOSE

    BLOCK_OPEN      shift and go to state 143


state 139

    (15) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT . INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE

    INT             shift and go to state 144


state 140

    (25) state -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT . INT CLOSE_SQUARE_BKT OF var_type
    (26) state_array_def -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT . INT CLOSE_SQUARE_BKT OF var_type

    INT             shift and go to state 145


state 141

    (18) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT . DOT INT CLOSE_SQUARE_BKT OF var_type COMMA argument_list
    (19) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT . DOT INT CLOSE_SQUARE_BKT OF var_type

    DOT             shift and go to state 146


state 142

    (13) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN . state_list BLOCK_CLOSE
    (3) state_list -> . BLOCK_OPEN state END_LINE state_list BLOCK_CLOSE
    (4) state_list -> . BLOCK_OPEN state END_LINE BLOCK_CLOSE
    (5) state_list -> . state END_LINE state_list
    (6) state_list -> . state END_LINE
    (9) state -> . IF expression THEN state_body
    (10) state -> . IF expression THEN state_body ELSE state_body
    (11) state -> . FOR NAME ASSIGNMENT expression TO expression DO state_body
    (12) state -> . WHILE expression DO state_body
    (13) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (21) state -> . RETURN expression
    (22) state -> . RETURN
    (23) state -> . VAR_DEF NAME COLON var_type
    (25) state -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (27) state -> . WRITELN OPEN_ROUND_BKT expression CLOSE_ROUND_BKT
    (28) state -> . READLN OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT
    (29) state -> . expression_name ASSIGNMENT expression
    (30) state -> . expression_array_call ASSIGNMENT expression
    (31) state -> . state_var_def ASSIGNMENT expression
    (32) state -> . state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (33) state -> . expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (34) state -> . expression
    (56) expression_name -> . NAME
    (40) expression_array_call -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (24) state_var_def -> . VAR_DEF NAME COLON var_type
    (26) state_array_def -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME

    BLOCK_OPEN      shift and go to state 5
    IF              shift and go to state 7
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    FUNC_DEF        shift and go to state 11
    RETURN          shift and go to state 13
    VAR_DEF         shift and go to state 14
    WRITELN         shift and go to state 15
    READLN          shift and go to state 16
    NAME            shift and go to state 25
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    state_list                     shift and go to state 147
    state                          shift and go to state 6
    expression                     shift and go to state 8
    expression_name                shift and go to state 17
    expression_array_call          shift and go to state 18
    state_var_def                  shift and go to state 19
    state_array_def                shift and go to state 20

state 143

    (14) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN . state_list BLOCK_CLOSE
    (3) state_list -> . BLOCK_OPEN state END_LINE state_list BLOCK_CLOSE
    (4) state_list -> . BLOCK_OPEN state END_LINE BLOCK_CLOSE
    (5) state_list -> . state END_LINE state_list
    (6) state_list -> . state END_LINE
    (9) state -> . IF expression THEN state_body
    (10) state -> . IF expression THEN state_body ELSE state_body
    (11) state -> . FOR NAME ASSIGNMENT expression TO expression DO state_body
    (12) state -> . WHILE expression DO state_body
    (13) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (21) state -> . RETURN expression
    (22) state -> . RETURN
    (23) state -> . VAR_DEF NAME COLON var_type
    (25) state -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (27) state -> . WRITELN OPEN_ROUND_BKT expression CLOSE_ROUND_BKT
    (28) state -> . READLN OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT
    (29) state -> . expression_name ASSIGNMENT expression
    (30) state -> . expression_array_call ASSIGNMENT expression
    (31) state -> . state_var_def ASSIGNMENT expression
    (32) state -> . state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (33) state -> . expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (34) state -> . expression
    (56) expression_name -> . NAME
    (40) expression_array_call -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (24) state_var_def -> . VAR_DEF NAME COLON var_type
    (26) state_array_def -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME

    BLOCK_OPEN      shift and go to state 5
    IF              shift and go to state 7
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    FUNC_DEF        shift and go to state 11
    RETURN          shift and go to state 13
    VAR_DEF         shift and go to state 14
    WRITELN         shift and go to state 15
    READLN          shift and go to state 16
    NAME            shift and go to state 25
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    state_list                     shift and go to state 148
    state                          shift and go to state 6
    expression                     shift and go to state 8
    expression_name                shift and go to state 17
    expression_array_call          shift and go to state 18
    state_var_def                  shift and go to state 19
    state_array_def                shift and go to state 20

state 144

    (15) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT . DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE

    DOT             shift and go to state 149


state 145

    (25) state -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT . CLOSE_SQUARE_BKT OF var_type
    (26) state_array_def -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT . CLOSE_SQUARE_BKT OF var_type

    CLOSE_SQUARE_BKT shift and go to state 150


state 146

    (18) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT . INT CLOSE_SQUARE_BKT OF var_type COMMA argument_list
    (19) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT . INT CLOSE_SQUARE_BKT OF var_type

    INT             shift and go to state 151


state 147

    (13) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list . BLOCK_CLOSE

    BLOCK_CLOSE     shift and go to state 152


state 148

    (14) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list . BLOCK_CLOSE

    BLOCK_CLOSE     shift and go to state 153


state 149

    (15) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT . DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE

    DOT             shift and go to state 154


state 150

    (25) state -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT . OF var_type
    (26) state_array_def -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT . OF var_type

    OF              shift and go to state 155


state 151

    (18) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT . CLOSE_SQUARE_BKT OF var_type COMMA argument_list
    (19) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT . CLOSE_SQUARE_BKT OF var_type

    CLOSE_SQUARE_BKT shift and go to state 156


state 152

    (13) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE .

    END_LINE        reduce using rule 13 (state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE .)
    ELSE            reduce using rule 13 (state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE .)


state 153

    (14) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE .

    END_LINE        reduce using rule 14 (state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE .)
    ELSE            reduce using rule 14 (state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE .)


state 154

    (15) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT . INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE

    INT             shift and go to state 157


state 155

    (25) state -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF . var_type
    (26) state_array_def -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF . var_type
    (57) var_type -> . FLOAT_TYPE
    (58) var_type -> . INT_TYPE
    (59) var_type -> . STRING_TYPE
    (60) var_type -> . BOOL_TYPE

    FLOAT_TYPE      shift and go to state 101
    INT_TYPE        shift and go to state 102
    STRING_TYPE     shift and go to state 103
    BOOL_TYPE       shift and go to state 104

    var_type                       shift and go to state 158

state 156

    (18) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT . OF var_type COMMA argument_list
    (19) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT . OF var_type

    OF              shift and go to state 159


state 157

    (15) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT . CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE

    CLOSE_SQUARE_BKT shift and go to state 160


state 158

    (25) state -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type .
    (26) state_array_def -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type .

    END_LINE        reduce using rule 25 (state -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type .)
    ELSE            reduce using rule 25 (state -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type .)
    ASSIGNMENT      reduce using rule 26 (state_array_def -> VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type .)


state 159

    (18) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF . var_type COMMA argument_list
    (19) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF . var_type
    (57) var_type -> . FLOAT_TYPE
    (58) var_type -> . INT_TYPE
    (59) var_type -> . STRING_TYPE
    (60) var_type -> . BOOL_TYPE

    FLOAT_TYPE      shift and go to state 101
    INT_TYPE        shift and go to state 102
    STRING_TYPE     shift and go to state 103
    BOOL_TYPE       shift and go to state 104

    var_type                       shift and go to state 161

state 160

    (15) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT . OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE

    OF              shift and go to state 162


state 161

    (18) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type . COMMA argument_list
    (19) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type .

    COMMA           shift and go to state 163
    CLOSE_ROUND_BKT reduce using rule 19 (argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type .)


state 162

    (15) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF . var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (57) var_type -> . FLOAT_TYPE
    (58) var_type -> . INT_TYPE
    (59) var_type -> . STRING_TYPE
    (60) var_type -> . BOOL_TYPE

    FLOAT_TYPE      shift and go to state 101
    INT_TYPE        shift and go to state 102
    STRING_TYPE     shift and go to state 103
    BOOL_TYPE       shift and go to state 104

    var_type                       shift and go to state 164

state 163

    (18) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type COMMA . argument_list
    (16) argument_list -> . NAME COLON var_type COMMA argument_list
    (17) argument_list -> . NAME COLON var_type
    (18) argument_list -> . NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type COMMA argument_list
    (19) argument_list -> . NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (20) argument_list -> . empty
    (61) empty -> .

    NAME            shift and go to state 96
    CLOSE_ROUND_BKT reduce using rule 61 (empty -> .)

    argument_list                  shift and go to state 165
    empty                          shift and go to state 98

state 164

    (15) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type . END_LINE BLOCK_OPEN state_list BLOCK_CLOSE

    END_LINE        shift and go to state 166


state 165

    (18) argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type COMMA argument_list .

    CLOSE_ROUND_BKT reduce using rule 18 (argument_list -> NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type COMMA argument_list .)


state 166

    (15) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE . BLOCK_OPEN state_list BLOCK_CLOSE

    BLOCK_OPEN      shift and go to state 167


state 167

    (15) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN . state_list BLOCK_CLOSE
    (3) state_list -> . BLOCK_OPEN state END_LINE state_list BLOCK_CLOSE
    (4) state_list -> . BLOCK_OPEN state END_LINE BLOCK_CLOSE
    (5) state_list -> . state END_LINE state_list
    (6) state_list -> . state END_LINE
    (9) state -> . IF expression THEN state_body
    (10) state -> . IF expression THEN state_body ELSE state_body
    (11) state -> . FOR NAME ASSIGNMENT expression TO expression DO state_body
    (12) state -> . WHILE expression DO state_body
    (13) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (14) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON NONE_TYPE END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (15) state -> . FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE
    (21) state -> . RETURN expression
    (22) state -> . RETURN
    (23) state -> . VAR_DEF NAME COLON var_type
    (25) state -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (27) state -> . WRITELN OPEN_ROUND_BKT expression CLOSE_ROUND_BKT
    (28) state -> . READLN OPEN_ROUND_BKT NAME CLOSE_ROUND_BKT
    (29) state -> . expression_name ASSIGNMENT expression
    (30) state -> . expression_array_call ASSIGNMENT expression
    (31) state -> . state_var_def ASSIGNMENT expression
    (32) state -> . state_array_def ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (33) state -> . expression_name ASSIGNMENT OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (34) state -> . expression
    (56) expression_name -> . NAME
    (40) expression_array_call -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (24) state_var_def -> . VAR_DEF NAME COLON var_type
    (26) state_array_def -> . VAR_DEF NAME COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type
    (38) expression -> . NAME OPEN_ROUND_BKT expr_list CLOSE_ROUND_BKT
    (39) expression -> . NAME OPEN_SQUARE_BKT expression CLOSE_SQUARE_BKT
    (41) expression -> . expression MULTIPLY expression
    (42) expression -> . expression DIVIDE expression
    (43) expression -> . expression PLUS expression
    (44) expression -> . expression MINUS expression
    (45) expression -> . expression EQUALS expression
    (46) expression -> . expression MORE expression
    (47) expression -> . expression LESS expression
    (48) expression -> . expression AND expression
    (49) expression -> . expression OR expression
    (50) expression -> . INT
    (51) expression -> . FLOAT
    (52) expression -> . BOOL
    (53) expression -> . expression_name DOT LENGTH
    (54) expression -> . STRING
    (55) expression -> . NAME

    BLOCK_OPEN      shift and go to state 5
    IF              shift and go to state 7
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    FUNC_DEF        shift and go to state 11
    RETURN          shift and go to state 13
    VAR_DEF         shift and go to state 14
    WRITELN         shift and go to state 15
    READLN          shift and go to state 16
    NAME            shift and go to state 25
    INT             shift and go to state 12
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 23

    state_list                     shift and go to state 168
    state                          shift and go to state 6
    expression                     shift and go to state 8
    expression_name                shift and go to state 17
    expression_array_call          shift and go to state 18
    state_var_def                  shift and go to state 19
    state_array_def                shift and go to state 20

state 168

    (15) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list . BLOCK_CLOSE

    BLOCK_CLOSE     shift and go to state 169


state 169

    (15) state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE .

    END_LINE        reduce using rule 15 (state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE .)
    ELSE            reduce using rule 15 (state -> FUNC_DEF NAME OPEN_ROUND_BKT argument_list CLOSE_ROUND_BKT COLON ARRAY OPEN_SQUARE_BKT INT DOT DOT INT CLOSE_SQUARE_BKT OF var_type END_LINE BLOCK_OPEN state_list BLOCK_CLOSE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 90 resolved as shift
